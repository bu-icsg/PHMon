diff --git a/gdb/riscv-linux-nat.c b/gdb/riscv-linux-nat.c
index b525220..1cd041f 100644
--- a/gdb/riscv-linux-nat.c
+++ b/gdb/riscv-linux-nat.c
@@ -86,15 +86,15 @@ supply_fpregset_regnum (struct regcache *regcache, const prfpregset_t *fpregs,
     {
       /* We only support the FP registers and FCSR here.  */
       for (i = RISCV_FIRST_FP_REGNUM; i <= RISCV_LAST_FP_REGNUM; i++)
-	regcache->raw_supply (i, &fpregs->__d.__f[i - RISCV_FIRST_FP_REGNUM]);
+	regcache->raw_supply (i, &fpregs->d.f[i - RISCV_FIRST_FP_REGNUM]);
 
-      regcache->raw_supply (RISCV_CSR_FCSR_REGNUM, &fpregs->__d.__fcsr);
+      regcache->raw_supply (RISCV_CSR_FCSR_REGNUM, &fpregs->d.fcsr);
     }
   else if (regnum >= RISCV_FIRST_FP_REGNUM && regnum <= RISCV_LAST_FP_REGNUM)
     regcache->raw_supply (regnum,
-			  &fpregs->__d.__f[regnum - RISCV_FIRST_FP_REGNUM]);
+			  &fpregs->d.f[regnum - RISCV_FIRST_FP_REGNUM]);
   else if (regnum == RISCV_CSR_FCSR_REGNUM)
-    regcache->raw_supply (RISCV_CSR_FCSR_REGNUM, &fpregs->__d.__fcsr);
+    regcache->raw_supply (RISCV_CSR_FCSR_REGNUM, &fpregs->d.fcsr);
 }
 
 /* Copy all floating point registers from regset FPREGS into REGCACHE.  */
@@ -141,15 +141,15 @@ fill_fpregset (const struct regcache *regcache, prfpregset_t *fpregs,
     {
       /* We only support the FP registers and FCSR here.  */
       for (int i = RISCV_FIRST_FP_REGNUM; i <= RISCV_LAST_FP_REGNUM; i++)
-	regcache->raw_collect (i, &fpregs->__d.__f[i - RISCV_FIRST_FP_REGNUM]);
+	regcache->raw_collect (i, &fpregs->d.f[i - RISCV_FIRST_FP_REGNUM]);
 
-      regcache->raw_collect (RISCV_CSR_FCSR_REGNUM, &fpregs->__d.__fcsr);
+      regcache->raw_collect (RISCV_CSR_FCSR_REGNUM, &fpregs->d.fcsr);
     }
   else if (regnum >= RISCV_FIRST_FP_REGNUM && regnum <= RISCV_LAST_FP_REGNUM)
     regcache->raw_collect (regnum,
-			   &fpregs->__d.__f[regnum - RISCV_FIRST_FP_REGNUM]);
+			   &fpregs->d.f[regnum - RISCV_FIRST_FP_REGNUM]);
   else if (regnum == RISCV_CSR_FCSR_REGNUM)
-    regcache->raw_collect (RISCV_CSR_FCSR_REGNUM, &fpregs->__d.__fcsr);
+    regcache->raw_collect (RISCV_CSR_FCSR_REGNUM, &fpregs->d.fcsr);
 }
 
 /* Fetch REGNUM (or all registers if REGNUM == -1) from the target
@@ -189,7 +189,7 @@ riscv_linux_nat_target::fetch_registers (struct regcache *regcache, int regnum)
       iov.iov_base = &regs;
       iov.iov_len = sizeof (regs);
 
-      if (ptrace (PTRACE_GETREGSET, tid, NT_PRFPREG,
+      if (ptrace (PTRACE_GETREGSET, tid, NT_PRFPXREG,
 		  (PTRACE_TYPE_ARG3) &iov) == -1)
 	perror_with_name (_("Couldn't get registers"));
       else
@@ -249,14 +249,14 @@ riscv_linux_nat_target::store_registers (struct regcache *regcache, int regnum)
       iov.iov_base = &regs;
       iov.iov_len = sizeof (regs);
 
-      if (ptrace (PTRACE_GETREGSET, tid, NT_PRFPREG,
+      if (ptrace (PTRACE_GETREGSET, tid, NT_PRFPXREG,
 		  (PTRACE_TYPE_ARG3) &iov) == -1)
 	perror_with_name (_("Couldn't get registers"));
       else
 	{
 	  fill_fpregset (regcache, &regs, regnum);
 
-	  if (ptrace (PTRACE_SETREGSET, tid, NT_PRFPREG,
+	  if (ptrace (PTRACE_SETREGSET, tid, NT_PRFPXREG,
 		      (PTRACE_TYPE_ARG3) &iov) == -1)
 	    perror_with_name (_("Couldn't set registers"));
 	}
